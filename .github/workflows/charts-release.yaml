name: "Charts: Release"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  charts-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full git history
          ref: ${{ github.ref }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/**'

      - name: Install helm-docs
        run: |
          curl -sSL https://github.com/norwoodj/helm-docs/releases/download/v1.14.2/helm-docs_1.14.2_Linux_x86_64.tar.gz | tar xz
          sudo mv helm-docs /usr/local/bin/

      - name: Regenerate READMEs for changed charts
        if: steps.filter.outputs.addedOrModified == 'true'
        run: |
          echo "üîç Detecting changed chart paths..."
          CHARTS=()
          PATHS=(${{ steps.filter.outputs.addedOrModified_files }})
          echo "Detected changed files: ${PATHS[@]}"
          for i in "${PATHS[@]}"
          do
              if [[ "$i" != charts/* ]]; then
                  continue
              fi
              IFS='/' read -r -a path_parts <<< "$i"
              if [[ ${#path_parts[@]} -lt 3 ]]; then
                  continue
              fi
              CHART_PATH="${path_parts[1]}/${path_parts[2]}"
              CHARTS+=("$CHART_PATH")
          done

          CHARTS=( $(printf "%s\n" "${CHARTS[@]}" | sort -u) )

          echo "üì¶ Changed charts:"
          for i in "${CHARTS[@]}"; do
            echo " - $i"
          done

          for i in "${CHARTS[@]}"
          do
              IFS='/' read -r -a chart_parts <<< "$i"
              CATEGORY="${chart_parts[0]}"
              NAME="${chart_parts[1]}"
              CHART_DIR="charts/${CATEGORY}/${NAME}"
              if [ -f "${CHART_DIR}/Chart.yaml" ]; then
                echo "üìÑ Generating docs for chart: ${CATEGORY}/${NAME}"
                ./hack/gen-helm-docs.sh "${CATEGORY}" "${NAME}"
              else
                echo "‚ùå Chart.yaml not found for ${CATEGORY}/${NAME}, skipping."
              fi
          done

      - name: Commit and push README changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Auto-generate chart README [no ci]
          file_pattern: charts/**/README.md
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com

      - name: Configure Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts/*
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
